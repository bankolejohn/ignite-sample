name: CI/CD with GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t newimage .

    - name: Push Docker Image to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        docker tag newimage "${{ secrets.DOCKER_HUB_USERNAME }}/newimage:latest"
        docker push "${{ secrets.DOCKER_HUB_USERNAME }}/newimage:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to EC2
      run: |
        # Add Terraform deployment script here
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
        sudo apt-get update && sudo apt-get install -y terraform

    - name: Initialize Terraform
      run: terraform init

    - name: Apply Terraform
      run: terraform apply -auto-approve

      # Additional steps for Terraform output, testing, or other deployment tasks

    - name: Deploy to EC2
      run: |
          def instanceIp = terraform output instance_public_ip
          docker save your-docker-image-name | ssh -o StrictHostKeyChecking=no ubuntu@${instanceIp} 'docker load'

  # Add additional steps as needed, such as testing, notifications, etc.

        # Example: terraform apply -auto-approve

# Add additional steps as needed, such as testing, notifications, etc.
